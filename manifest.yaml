id: filebrowser
title: "File Browser"
version: 2.22.4.1
release-notes: |
  * Update to run on x86_64 architecture
  * Utilize new eOS APIs
license: apache
wrapper-repo: "https://github.com/Start9Labs/filebrowser-wrapper"
upstream-repo: "https://github.com/filebrowser/filebrowser"
support-site: "https://github.com/filebrowser/filebrowser/issues"
marketing-site: "https://filebrowser.org/"
build: ["make"]
description:
  short: Simple cloud data storage and sharing
  long: |
    File Browser provides a simple file managing interface which can be used to upload, download, organize, edit, and share your files.
    It allows the creation of multiple users and each user can have their own directory.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: script
containers:
  main:
    image: main
    mounts:
      main: /root
health-checks:
  version:
    name: Database
    success-message: Backend is reachable and responsive.
    type: script
  web-ui:
    name: Web Interface
    success-message: Filebrowser is ready to be visited in your browser.
    type: script
config: ~
properties:
  type: script
dependencies: {}
volumes:
  main:
    type: data
interfaces:
  main:
    name: Web UI
    description: Serves the Web UI via HTTP.
    tor-config:
      port-mapping:
        80: "80"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
alerts: {}
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
actions:
  reset-root-user:
    name: Reset Root User
    description: Resets your root user (the first user) to username "admin" and a random password; restores any lost admin privileges.
    warning: This will invalidate existing sessions and password managers if you have them set up.
    allowed-statuses:
      - stopped
    implementation:
      type: docker
      image: main
      system: false
      entrypoint: docker_entrypoint.sh
      args: ["reset-root-user"]
      mounts:
        main: /root
      io-format: json
migrations:
  from:
    "*":
      type: script
      args: ["to"]
  to:
    "*":
      type: script
      args: ["to"]
